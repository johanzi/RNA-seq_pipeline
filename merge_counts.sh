

usage="$(basename "$0") [-h] <list_file_counts> <sample_names> 
	\n\n
    Description:\n
	Merge files generated by HTseq by combining read count columns.
	This assumes that the different read count files contain the same \
	number of rows and same genes at the same row across files. \
   	\n\n
	Arguments:\n
	<list_file_counts> : text file containing names (absolute path possible)\
	for each read count files to process. All file names should be on separate\
	rows.
	\n\n
	<sample_names> : text file containing sample names which may differ from \
	the names of the read count files. The order of the names should be the same\
	as the order in the <list_file_counts> file. Each name on separate row.
	\n\n
	The output is sent to stdout and consists of a matrix of genes x samples.\
	Names of the genes are in the first column (no header) and read counts are \
	in the consecutive columns with the sample name as header.\n
	This output can redirected into a file and imported in R for analysis using\
	for example DESeq pipeline. (note that import should consider column 1 as row name).
	\n\n
	Generate merged file called count matrix (cts) in DESeq pipeline:\n
	$ bash $(basename "$0") list_file_counts.txt sample_names.txt > cts.txt
	\n\n
    Import in R:\n
	counts = read.table ("cts.txt", header=TRUE, row.names=1)
	\n\n
	Author: Johan Zicola (johan.zicola@gmail.com)\n
	Date: 2018-11-29
"


# Check 1st argument
if [ -z $1 ] || [ "$1" == "-h" ]; then
    echo -e $usage | fold -s -w 80
    exit 1
fi

# Read count files
list_files=$1

# Sample names to give (should follow order of read count files)
list_samples=$2



# Check that the two files have same number of lines

ln_list_files=$( wc -l $list_files | cut -d' ' -f1)
ln_list_samples=$( wc -l $list_samples | cut -d' ' -f1)

if [[ $ln_list_files != $ln_list_samples ]]; then
	echo "$list_files and $list_samples have different row number.\
 The row number should be equal!."
	exit 1
fi



# Create file with all genes (first column)
# Make tmp file
genes=$(mktemp)
file1=$(head -n1 $list_files)
cut -f1 $file1 > $genes

# Get for each file the gene count
while read i; do
	cut -f2 $i > ${i}.read_count
done < $list_files

# Create header of the merged file
# Add a tab as first column (no name for genes)
paste -s $list_samples | sed '1s/^/\t/' -

# Merge by columns all files
# and remove lines starting by double underscore (end of lines in HTseq output)
paste $genes *.read_count | grep -v "__" -








